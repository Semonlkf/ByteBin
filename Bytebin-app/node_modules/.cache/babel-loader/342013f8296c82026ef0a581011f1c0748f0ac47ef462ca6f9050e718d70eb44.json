{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navigation from \"@/components/Navigation\";\nimport { getArticleDetail, postArticle, update } from \"@/api/Article\";\nimport { uploadFile } from \"@/api/Common\";\nexport default {\n  name: \"Write\",\n  data() {\n    return {\n      id: String,\n      inputVisible: false,\n      inputValue: '',\n      article: {\n        title: '',\n        content: '',\n        tags: [],\n        description: ''\n      },\n      tags: [],\n      editor: {\n        value: ''\n      },\n      flag: 0\n    };\n  },\n  methods: {\n    handleClose(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.tags.push(inputValue);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    postArticle() {\n      this.article.content = this.$refs.md.d_value;\n      this.article.tags = this.tags;\n      console.log(this.article);\n      if (this.id) {\n        this.article.id = this.id;\n        update(JSON.stringify(this.article)).then(res => {\n          if (res.code == 2001) {\n            this.$notify({\n              title: \"HitBytebin\",\n              message: res.message,\n              type: \"success\",\n              duration: 2000\n            });\n            this.flag = 1;\n            this.$router.push(\"/home\");\n          } else {\n            this.$notify({\n              title: \"Bloggy\",\n              message: res.message,\n              type: \"error\",\n              duration: 1000\n            });\n          }\n        });\n      } else {\n        postArticle(JSON.stringify(this.article)).then(res => {\n          if (res.code == 2001) {\n            this.$notify({\n              title: \"Bloggy\",\n              message: res.message,\n              type: \"success\",\n              duration: 2000\n            });\n            this.flag = 1;\n            this.$router.push(\"/index\");\n          } else {\n            this.$notify({\n              title: \"Bloggy\",\n              message: res.message,\n              type: \"error\",\n              duration: 1000\n            });\n          }\n        });\n      }\n    },\n    imgAdd(pos, file) {\n      // 上传图片\n      let formData = new FormData();\n      formData.append('image', file);\n      uploadFile(formData).then(res => {\n        // 第二步.将返回的url替换到文本原位置![...](./0) -> ![...](url)\n        /**\r\n         * $vm 指为mavonEditor实例，可以通过如下两种方式获取\r\n         * 1.  通过引入对象获取: `import {mavonEditor} from ...` 等方式引入后，`$vm`为`mavonEditor`\r\n         * 2. 通过$refs获取: html声明ref : `<mavon-editor ref=md ></mavon-editor>，`$vm`为 `this.$refs.md`\r\n         *\r\n         */\n        this.$refs.md.$img2Url(pos, res.data.path);\n      });\n    },\n    getDetail() {\n      getArticleDetail(this.id).then(res => {\n        this.article = res.data.article;\n        this.tags = res.data.article.tags;\n        this.editor.value = this.article.content;\n      });\n    }\n  },\n  components: {\n    'navigation': Navigation\n  },\n  beforeDestroy() {\n    let value = this.$refs.md.d_value;\n    if (this.flag == 0) {\n      this.$cookie.set(\"draft\", value, 24 * 60 * 60 * 30);\n    } else {\n      this.$cookie.delete(\"draft\");\n    }\n  },\n  created() {\n    this.id = this.$route.query.id;\n    if (this.id) {\n      this.getDetail();\n    }\n    return;\n    this.editor.value = this.$cookie.get(\"draft\");\n  }\n};","map":{"version":3,"names":["Navigation","getArticleDetail","postArticle","update","uploadFile","name","data","id","String","inputVisible","inputValue","article","title","content","tags","description","editor","value","flag","methods","handleClose","tag","splice","indexOf","showInput","$nextTick","_","$refs","saveTagInput","input","focus","handleInputConfirm","push","md","d_value","console","log","JSON","stringify","then","res","code","$notify","message","type","duration","$router","imgAdd","pos","file","formData","FormData","append","$img2Url","path","getDetail","components","beforeDestroy","$cookie","set","delete","created","$route","query","get"],"sources":["src/views/Write.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-container>\r\n      <el-aside style=\"width: 15%;margin-left: 20px;overflow: visible\">\r\n        <el-tag v-for=\"tag in tags\"\r\n                :key=\"tag\"\r\n                :disable-transitions=\"false\"\r\n                class=\"article-tag\"\r\n                closable\r\n                effect=\"dark\"\r\n                @close=\"handleClose(tag)\">\r\n          {{ tag }}\r\n        </el-tag>\r\n        <el-input\r\n            v-if=\"inputVisible\"\r\n            ref=\"saveTagInput\"\r\n            v-model=\"inputValue\"\r\n            class=\"input-new-tag\"\r\n            size=\"small\"\r\n            @blur=\"handleInputConfirm\"\r\n            @keyup.enter.native=\"handleInputConfirm\"\r\n        >\r\n        </el-input>\r\n        <el-button v-else class=\"button-new-tag\" size=\"small\" style=\"position: absolute;margin-top: 10px\"\r\n                   @click=\"showInput\">+ New Tag\r\n        </el-button>\r\n      </el-aside>\r\n      <el-main>\r\n        <div id=\"title\">\r\n          <el-input v-model=\"article.title\" autosize maxlength=\"50\" placeholder=\"请输入标题\" show-word-limit\r\n                    style=\"width: 70%;float: left;font-size: 18px\" type=\"textarea\"></el-input>\r\n          <el-button round style=\"float: right\" type=\"primary\" @click=\"postArticle\">发布</el-button>\r\n        </div>\r\n\r\n        <div id=\"editor\">\r\n          <mavon-editor ref=\"md\"\r\n                        v-model=\"editor.value\" style=\"width: 100%;margin-top: 30px\" @imgAdd=\"imgAdd\"/>\r\n        </div>\r\n\r\n      </el-main>\r\n    </el-container>\r\n\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport Navigation from \"@/components/Navigation\";\r\nimport {getArticleDetail, postArticle, update} from \"@/api/Article\";\r\nimport {uploadFile} from \"@/api/Common\";\r\n\r\nexport default {\r\n  name: \"Write\",\r\n\r\n  data() {\r\n    return {\r\n      id: String,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n      article: {\r\n        title: '',\r\n        content: '',\r\n        tags: [],\r\n        description: ''\r\n      },\r\n      tags: [],\r\n      editor: {\r\n        value: '',\r\n      },\r\n      flag: 0\r\n    }\r\n  },\r\n  methods: {\r\n    handleClose(tag) {\r\n      this.tags.splice(this.tags.indexOf(tag), 1);\r\n    },\r\n\r\n    showInput() {\r\n      this.inputVisible = true;\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n\r\n    handleInputConfirm() {\r\n      let inputValue = this.inputValue;\r\n      if (inputValue) {\r\n        this.tags.push(inputValue);\r\n      }\r\n      this.inputVisible = false;\r\n      this.inputValue = '';\r\n    },\r\n    postArticle() {\r\n      this.article.content = this.$refs.md.d_value\r\n      this.article.tags = this.tags\r\n      console.log(this.article)\r\n      if (this.id) {\r\n        this.article.id = this.id\r\n        update(JSON.stringify(this.article)).then((res) => {\r\n          if (res.code == 2001) {\r\n            this.$notify({\r\n              title: \"HitBytebin\",\r\n              message: res.message,\r\n              type: \"success\",\r\n              duration: 2000\r\n            })\r\n            this.flag = 1\r\n            this.$router.push(\"/home\")\r\n          } else {\r\n            this.$notify({\r\n              title: \"Bloggy\",\r\n              message: res.message,\r\n              type: \"error\",\r\n              duration: 1000\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        postArticle(JSON.stringify(this.article)).then((res) => {\r\n          if (res.code == 2001) {\r\n            this.$notify({\r\n              title: \"Bloggy\",\r\n              message: res.message,\r\n              type: \"success\",\r\n              duration: 2000\r\n            })\r\n            this.flag = 1\r\n            this.$router.push(\"/index\")\r\n          } else {\r\n            this.$notify({\r\n              title: \"Bloggy\",\r\n              message: res.message,\r\n              type: \"error\",\r\n              duration: 1000\r\n            })\r\n          }\r\n        })\r\n\r\n      }\r\n    },\r\n    imgAdd(pos, file) {\r\n// 上传图片\r\n      let formData = new FormData()\r\n      formData.append('image', file)\r\n      uploadFile(formData).then((res) => {\r\n        // 第二步.将返回的url替换到文本原位置![...](./0) -> ![...](url)\r\n        /**\r\n         * $vm 指为mavonEditor实例，可以通过如下两种方式获取\r\n         * 1.  通过引入对象获取: `import {mavonEditor} from ...` 等方式引入后，`$vm`为`mavonEditor`\r\n         * 2. 通过$refs获取: html声明ref : `<mavon-editor ref=md ></mavon-editor>，`$vm`为 `this.$refs.md`\r\n         *\r\n         */\r\n        this.$refs.md.$img2Url(pos, res.data.path)\r\n      })\r\n    },\r\n    getDetail() {\r\n      getArticleDetail(this.id).then((res) => {\r\n        this.article = res.data.article\r\n        this.tags = res.data.article.tags\r\n        this.editor.value = this.article.content\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    'navigation': Navigation\r\n  },\r\n  beforeDestroy() {\r\n    let value = this.$refs.md.d_value\r\n    if (this.flag == 0) {\r\n      this.$cookie.set(\"draft\", value, 24 * 60 * 60 * 30)\r\n    } else {\r\n      this.$cookie.delete(\"draft\")\r\n    }\r\n  },\r\n  created() {\r\n    this.id = this.$route.query.id\r\n    if (this.id) {\r\n      this.getDetail()\r\n    }\r\n    return\r\n    this.editor.value = this.$cookie.get(\"draft\")\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#editor {\r\n  width: 80%;\r\n  text-align: center;\r\n  margin: 100px auto 20px;\r\n}\r\n\r\n#title {\r\n  width: 80%;\r\n  text-align: center;\r\n  background-color: #42b983;\r\n  margin: 0 auto 0;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n}\r\n\r\n.el-tag {\r\n  white-space: normal;\r\n  height: auto;\r\n  text-align: left;\r\n  border-radius: 8px;\r\n  float: left;\r\n  margin-left: 10px;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}