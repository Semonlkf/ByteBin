{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navigation from \"@/components/Navigation\";\nimport { fuzzySearch, getByTag } from \"@/api/Article\";\nimport ArticleList from \"@/components/ArticleList\";\nimport UserList from \"@/components/UserList.vue\";\nimport { searchUser } from \"@/api/User\";\nexport default {\n  name: \"SearchDetail\",\n  data() {\n    return {\n      keyword: '',\n      activeName: 'first',\n      articles: [],\n      articlePage: 1,\n      articleTotal: 0,\n      tags: [],\n      users: []\n    };\n  },\n  methods: {\n    chooseSearchType() {\n      let str = this.keyword;\n      const regex = /#\\s*([\\u4e00-\\u9fa5a-zA-Z]+)\\s*#/g;\n      const tags = [];\n      let match;\n      while ((match = regex.exec(str)) !== null) {\n        tags.push(match[1]);\n      }\n      if (tags.length === 0) {\n        this.fuzzySearch();\n      } else {\n        this.searchByTag(tags);\n      }\n    },\n    searchByTag(tags) {\n      let data = new FormData();\n      data.append(\"tags\", tags);\n      data.append(\"page\", this.articlePage);\n      console.log(data);\n      getByTag(data).then(res => {\n        this.articles = res.data.articles;\n        this.articleTotal = res.data.count;\n        console.log(this.articles);\n      });\n    },\n    fuzzySearch() {\n      fuzzySearch(encodeURIComponent(this.keyword), this.articlePage).then(res => {\n        this.articles = res.data.articles;\n        this.articleTotal = res.data.count;\n      });\n    },\n    searchUser() {\n      searchUser(encodeURIComponent(this.keyword)).then(res => {\n        this.users = res.data.users;\n        this.$forceUpdate();\n      });\n    }\n  },\n  components: {\n    'navigation': Navigation,\n    'article-list': ArticleList,\n    'user-list': UserList\n  },\n  created() {\n    this.keyword = this.$route.query.keyword;\n    this.chooseSearchType();\n    this.searchUser();\n  },\n  watch: {\n    '$route'(to, from) {\n      this.keyword = to.query.keyword;\n      this.chooseSearchType();\n    }\n  },\n  mounted() {\n    this.$emit(\"updateIndex\", 'search');\n  }\n};","map":{"version":3,"names":["Navigation","fuzzySearch","getByTag","ArticleList","UserList","searchUser","name","data","keyword","activeName","articles","articlePage","articleTotal","tags","users","methods","chooseSearchType","str","regex","match","exec","push","length","searchByTag","FormData","append","console","log","then","res","count","encodeURIComponent","$forceUpdate","components","created","$route","query","watch","to","from","mounted","$emit"],"sources":["src/views/SearchDetail.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-main style=\"width: 70%;margin: 0 auto;\">\r\n      <el-tabs v-model=\"activeName\">\r\n        <el-tab-pane label=\"文章\" name=\"first\">\r\n          <el-container v-if=\"articleTotal>0\">\r\n            <el-main>\r\n              <article-list :articles=\"articles\"/>\r\n            </el-main>\r\n            <el-footer>\r\n              <el-pagination\r\n                  :current-page.sync=\"articlePage\"\r\n                  :page-size=\"15\"\r\n                  :total=\"articleTotal\"\r\n                  background\r\n                  layout=\"total, prev, pager, next,jumper\"\r\n                  style=\"color: white;padding-top: 30px;\"\r\n                  @current-change=\"chooseSearchType\">\r\n              </el-pagination>\r\n            </el-footer>\r\n          </el-container>\r\n          <el-empty v-else description=\"空空如也\"></el-empty>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"用户\" name=\"third\">\r\n          <user-list v-if=\"users.length>0\" :users=\"users\"/>\r\n          <el-empty v-else description=\"空空如也\"></el-empty>\r\n\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport Navigation from \"@/components/Navigation\";\r\nimport {fuzzySearch, getByTag} from \"@/api/Article\";\r\nimport ArticleList from \"@/components/ArticleList\";\r\nimport UserList from \"@/components/UserList.vue\";\r\nimport {searchUser} from \"@/api/User\";\r\n\r\nexport default {\r\n  name: \"SearchDetail\",\r\n  data() {\r\n    return {\r\n      keyword: '',\r\n      activeName: 'first',\r\n      articles: [],\r\n      articlePage: 1,\r\n      articleTotal: 0,\r\n      tags: [],\r\n      users: []\r\n    }\r\n  },\r\n  methods: {\r\n    chooseSearchType() {\r\n      let str = this.keyword;\r\n      const regex = /#\\s*([\\u4e00-\\u9fa5a-zA-Z]+)\\s*#/g;\r\n      const tags = [];\r\n      let match;\r\n      while ((match = regex.exec(str)) !== null) {\r\n        tags.push(match[1]);\r\n      }\r\n      if (tags.length === 0) {\r\n        this.fuzzySearch();\r\n      } else {\r\n        this.searchByTag(tags);\r\n      }\r\n    },\r\n    searchByTag(tags) {\r\n      let data = new FormData\r\n      data.append(\"tags\", tags)\r\n      data.append(\"page\", this.articlePage)\r\n      console.log(data)\r\n      getByTag(data).then((res) => {\r\n        this.articles = res.data.articles\r\n        this.articleTotal = res.data.count\r\n        console.log(this.articles)\r\n      })\r\n    },\r\n    fuzzySearch() {\r\n      fuzzySearch(encodeURIComponent(this.keyword), this.articlePage).then((res) => {\r\n        this.articles = res.data.articles\r\n        this.articleTotal = res.data.count\r\n      })\r\n    },\r\n    searchUser() {\r\n      searchUser(encodeURIComponent(this.keyword)).then((res) => {\r\n        this.users = res.data.users\r\n        this.$forceUpdate()\r\n      })\r\n    }\r\n  }\r\n  ,\r\n  components: {\r\n    'navigation': Navigation,\r\n    'article-list': ArticleList,\r\n    'user-list': UserList\r\n  }\r\n  ,\r\n  created() {\r\n    this.keyword = this.$route.query.keyword\r\n    this.chooseSearchType()\r\n    this.searchUser()\r\n  },\r\n  watch: {\r\n    '$route'(to, from) {\r\n      this.keyword = to.query.keyword\r\n      this.chooseSearchType()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$emit(\"updateIndex\",'search')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAAA,UAAA;AACA,SAAAC,WAAA,EAAAC,QAAA;AACA,OAAAC,WAAA;AACA,OAAAC,QAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,WAAA;MACAC,YAAA;MACAC,IAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA,IAAAC,GAAA,QAAAT,OAAA;MACA,MAAAU,KAAA;MACA,MAAAL,IAAA;MACA,IAAAM,KAAA;MACA,QAAAA,KAAA,GAAAD,KAAA,CAAAE,IAAA,CAAAH,GAAA;QACAJ,IAAA,CAAAQ,IAAA,CAAAF,KAAA;MACA;MACA,IAAAN,IAAA,CAAAS,MAAA;QACA,KAAArB,WAAA;MACA;QACA,KAAAsB,WAAA,CAAAV,IAAA;MACA;IACA;IACAU,YAAAV,IAAA;MACA,IAAAN,IAAA,OAAAiB,QAAA;MACAjB,IAAA,CAAAkB,MAAA,SAAAZ,IAAA;MACAN,IAAA,CAAAkB,MAAA,cAAAd,WAAA;MACAe,OAAA,CAAAC,GAAA,CAAApB,IAAA;MACAL,QAAA,CAAAK,IAAA,EAAAqB,IAAA,CAAAC,GAAA;QACA,KAAAnB,QAAA,GAAAmB,GAAA,CAAAtB,IAAA,CAAAG,QAAA;QACA,KAAAE,YAAA,GAAAiB,GAAA,CAAAtB,IAAA,CAAAuB,KAAA;QACAJ,OAAA,CAAAC,GAAA,MAAAjB,QAAA;MACA;IACA;IACAT,YAAA;MACAA,WAAA,CAAA8B,kBAAA,MAAAvB,OAAA,QAAAG,WAAA,EAAAiB,IAAA,CAAAC,GAAA;QACA,KAAAnB,QAAA,GAAAmB,GAAA,CAAAtB,IAAA,CAAAG,QAAA;QACA,KAAAE,YAAA,GAAAiB,GAAA,CAAAtB,IAAA,CAAAuB,KAAA;MACA;IACA;IACAzB,WAAA;MACAA,UAAA,CAAA0B,kBAAA,MAAAvB,OAAA,GAAAoB,IAAA,CAAAC,GAAA;QACA,KAAAf,KAAA,GAAAe,GAAA,CAAAtB,IAAA,CAAAO,KAAA;QACA,KAAAkB,YAAA;MACA;IACA;EACA;EAEAC,UAAA;IACA,cAAAjC,UAAA;IACA,gBAAAG,WAAA;IACA,aAAAC;EACA;EAEA8B,QAAA;IACA,KAAA1B,OAAA,QAAA2B,MAAA,CAAAC,KAAA,CAAA5B,OAAA;IACA,KAAAQ,gBAAA;IACA,KAAAX,UAAA;EACA;EACAgC,KAAA;IACA,QAAAF,CAAAG,EAAA,EAAAC,IAAA;MACA,KAAA/B,OAAA,GAAA8B,EAAA,CAAAF,KAAA,CAAA5B,OAAA;MACA,KAAAQ,gBAAA;IACA;EACA;EACAwB,QAAA;IACA,KAAAC,KAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}