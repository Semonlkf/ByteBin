{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getViews } from \"@/admin/api/Common\";\nimport { getPublishCountByDay, getRecordCount } from \"@/admin/api/Article\";\nimport { getRegCountByDay, getUserCount } from \"@/admin/api/User\";\nimport { descArray, doPercent, getCount } from \"@/util/tools\";\nimport * as moment from 'moment';\nexport default {\n  name: \"DashBoard\",\n  data() {\n    return {\n      rc: {},\n      rcYearOption: [],\n      rcYearValue: '',\n      monthRcCount: 0,\n      rcTrendInfo: '',\n      rcMonthOption: [],\n      rcMonthValue: '',\n      uv: {},\n      uvYearOption: [],\n      uvYearValue: '',\n      monthUvCount: 0,\n      uvTrendInfo: '',\n      uvMonthOption: [],\n      uvMonthValue: '',\n      articlePublishCount: [],\n      articleInactiveCount: 0,\n      articleActiveCount: 0,\n      dayArticleCount: 0,\n      articleTrendInfo: '',\n      userRegCount: [],\n      dayUserCount: 0,\n      userTrendInfo: '',\n      //最近x天\n      articleDayRange: 10,\n      userDayRange: 10,\n      rcChart: null,\n      rcChartConfig: {\n        tooltip: {},\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: \"当日rc\",\n          type: \"line\",\n          tooltip: {\n            valueFormatter: function (value) {\n              return getCount(value);\n            }\n          },\n          data: []\n        }],\n        dataZoom: {\n          type: 'slider',\n          start: 0,\n          end: 100,\n          height: 10,\n          bottom: 4,\n          showDataShadow: true,\n          showDetail: false,\n          show: false\n        }\n      },\n      uvChart: null,\n      uvChartConfig: {\n        color: '#96ce7a',\n        tooltip: {},\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: \"当日uv\",\n          type: \"line\",\n          data: []\n        }],\n        dataZoom: {\n          type: 'slider',\n          start: 0,\n          end: 100,\n          height: 14,\n          bottom: 4,\n          showDataShadow: true,\n          showDetail: false,\n          show: false\n        }\n      },\n      articleChart: null,\n      articleChartConfig: {\n        color: '#fccc60',\n        tooltip: {},\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: \"当日文章发布\",\n          type: \"line\",\n          data: []\n        }],\n        dataZoom: {\n          type: 'slider',\n          start: 0,\n          end: 100,\n          height: 14,\n          showDataShadow: true,\n          showDetail: false,\n          show: false\n        }\n      },\n      articleSector: null,\n      articleSectorConfig: {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: 0,\n          left: 'center'\n        },\n        grid: {\n          top: '30%',\n          left: 'center'\n        },\n        series: [{\n          name: '文章统计',\n          type: 'pie',\n          radius: ['30%', '70%'],\n          center: ['50%', '50%'],\n          roseType: 'area',\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 20,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: []\n        }]\n      },\n      userChart: null,\n      userChartConfig: {\n        color: '#ec6464',\n        tooltip: {},\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 2,\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: \"当日用户注册\",\n          type: \"bar\",\n          data: []\n        }],\n        dataZoom: {\n          type: 'slider',\n          start: 0,\n          end: 100,\n          height: 14,\n          showDataShadow: true,\n          showDetail: false,\n          show: false\n        }\n      }\n    };\n  },\n  methods: {\n    getViews() {\n      getViews().then(res => {\n        this.rc = res.data.rc;\n        this.uv = res.data.uv;\n        this.setMonthRcCount();\n        this.setRcYearOption();\n        this.setRcMonthOption();\n        this.refreshRcChart();\n        this.setMonthUvCount();\n        this.setUvYearOption();\n        this.setUvMonthOption();\n        this.refreshUvChart();\n      });\n    },\n    setRcYearOption() {\n      let year = Object.keys(this.rc);\n      year = descArray(year);\n      this.rcYearValue = year[0];\n      this.rcYearOption = year;\n    },\n    handlerRcYearChange() {\n      this.setRcMonthOption();\n      this.refreshRcChart();\n    },\n    setMonthRcCount() {\n      let year = new Date().getFullYear().toString();\n      let month = new Date().getMonth() + 1;\n      let count = [0, 0];\n      let lastMonth = this.rc[year][(month - 1).toString().padStart(2, '0')];\n      let thisMonth = this.rc[year][month.toString().padStart(2, '0')];\n      console.log(lastMonth);\n      console.log(thisMonth);\n      lastMonth.forEach(map => {\n        count[0] += Object.values(map)[0];\n      });\n      thisMonth.forEach(map => {\n        count[1] += Object.values(map)[0];\n      });\n      this.monthRcCount = count[1];\n      let percent = doPercent(count[1], count[0]);\n      console.log(percent);\n      if (percent > 100) {\n        this.rcTrendInfo = \"较上月提升\" + percent + \"%\";\n      } else if (percent === 100) {\n        this.rcTrendInfo = \"较上月提升0%\";\n      } else {\n        this.rcTrendInfo = \"较上月下降\" + percent + \"%\";\n      }\n    },\n    setRcMonthOption() {\n      let year = this.rcYearValue;\n      let month = Object.keys(this.rc[year]);\n      month = descArray(month);\n      this.rcMonthValue = month[0];\n      this.rcMonthOption = month;\n    },\n    refreshRcChart() {\n      let rc = this.rc;\n      let days = rc[this.rcYearValue][this.rcMonthValue];\n      let xValues = [];\n      let yValues = [];\n      for (let i = days.length - 1; i >= 0; i--) {\n        xValues.push(Object.keys(days[i])[0] + '号');\n        yValues.push(Object.values(days[i])[0]);\n      }\n      if (xValues.length > 10) {\n        this.rcChartConfig.dataZoom.show = true;\n      }\n      this.rcChartConfig.xAxis.data = xValues;\n      this.rcChartConfig.series[0].data = yValues;\n      this.rcChart.setOption(this.rcChartConfig);\n    },\n    setUvYearOption() {\n      let year = Object.keys(this.uv);\n      year = descArray(year);\n      this.uvYearValue = year[0];\n      this.uvYearOption = year;\n    },\n    setMonthUvCount() {\n      let record = this.uv;\n      console.log(record);\n      let date = new Date();\n      let year = date.getFullYear().toString();\n      let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n      let today = date.getDate().toString().padStart(2, \"0\");\n      let yesterday = (date.getDate() - 1).toString().padStart(2, \"0\");\n      let thisMonthData = new Map();\n      record[year][month].forEach(map => {\n        thisMonthData.set(Object.keys(map)[0], Object.values(map)[0]);\n      });\n      this.monthUvCount = thisMonthData.get(today);\n      let percent = doPercent(this.monthUvCount, thisMonthData.get(yesterday));\n      if (percent > 100) {\n        this.uvTrendInfo = \"较昨日增加\" + percent + \"%\";\n      } else if (percent === 10) {\n        this.uvTrendInfo = \"较昨日增加0%\";\n      } else {\n        this.uvTrendInfo = \"较昨日减少\" + percent + \"%\";\n      }\n    },\n    handlerUvYearChange() {\n      this.setUvMonthOption();\n      this.refreshUvChart();\n    },\n    setUvMonthOption() {\n      let year = this.uvYearValue;\n      let month = Object.keys(this.uv[year]);\n      month = descArray(month);\n      this.uvMonthValue = month[0];\n      this.uvMonthOption = month;\n    },\n    refreshUvChart() {\n      let uv = this.uv;\n      let days = uv[this.uvYearValue][this.uvMonthValue];\n      let xValues = [];\n      let yValues = [];\n      for (let i = days.length - 1; i >= 0; i--) {\n        xValues.push(Object.keys(days[i])[0] + '号');\n        yValues.push(Object.values(days[i])[0]);\n      }\n      if (xValues.length > 10) {\n        this.uvChartConfig.dataZoom.show = true;\n      }\n      this.uvChartConfig.xAxis.data = xValues;\n      this.uvChartConfig.series[0].data = yValues;\n      this.uvChart.setOption(this.uvChartConfig);\n    },\n    getArticleRecordCount() {\n      getRecordCount().then(res => {\n        let data = res.data;\n        let all = data.all;\n        let active = data.active;\n        this.articleActiveCount = active;\n        this.articleInactiveCount = all - active;\n        this.refreshArticleCountChart();\n      });\n    },\n    refreshArticleCountChart() {\n      let data = [{\n        value: this.articleActiveCount,\n        name: '有效',\n        itemStyle: {\n          color: '#98cc74'\n        }\n      }, {\n        value: this.articleInactiveCount,\n        name: '冻结',\n        itemStyle: {\n          color: '#ec6464'\n        }\n      }];\n      this.articleSectorConfig.series[0].data = data;\n      this.articleSector.setOption(this.articleSectorConfig);\n    },\n    getArticleCount() {\n      getPublishCountByDay(this.articleDayRange).then(res => {\n        this.articlePublishCount = res.data.records;\n        this.setDayArticleCount();\n        this.refreshArticleChart();\n      });\n    },\n    setDayArticleCount() {\n      let date = new Date();\n      let dateFormat = \"YYYY-MM-DD\";\n      let forMatDate = moment(date).format(dateFormat);\n      let lastRecord = this.articlePublishCount[this.articlePublishCount.length - 1];\n      let secondLastRecord = this.articlePublishCount[this.articlePublishCount.length - 2];\n      let count = [0, 0];\n      if (lastRecord && lastRecord.date === forMatDate) {\n        count[0] = lastRecord.count;\n      }\n      date = moment(date).subtract(1, \"days\");\n      forMatDate = moment(date).format(dateFormat);\n      if (secondLastRecord && secondLastRecord.date === forMatDate) {\n        count[1] = secondLastRecord.count;\n      }\n      console.log(lastRecord, secondLastRecord, count);\n      this.dayArticleCount = count[0];\n      let percent = doPercent(count[0], count[1]);\n      if (percent > 100) {\n        this.articleTrendInfo = \"较昨天增加\" + percent + \"%\";\n      } else if (percent === 100) {\n        this.articleTrendInfo = \"较昨天增加0%\";\n      } else {\n        this.articleTrendInfo = \"较昨天减少\" + percent + \"%\";\n      }\n    },\n    artRangeChange() {\n      this.articleDayRange = Number(this.articleDayRange) || 10;\n      this.getArticleCount();\n    },\n    refreshArticleChart() {\n      let articles = this.articlePublishCount;\n      let xValues = [];\n      let yValues = [];\n      for (let i = 0; i < articles.length; i++) {\n        xValues.push(articles[i].date);\n        yValues.push(articles[i].count);\n      }\n      this.articleChartConfig.xAxis.data = xValues;\n      this.articleChartConfig.series[0].data = yValues;\n      this.articleChart.setOption(this.articleChartConfig);\n    },\n    getUserCount() {\n      getRegCountByDay(this.userDayRange).then(res => {\n        this.userRegCount = res.data.records;\n        this.setUserCount();\n        this.refreshUserChart();\n      });\n      getUserCount().then(res => {\n        let count = res.data.all;\n        this.userTrendInfo = \"共有用户\" + count + \"位\";\n      });\n    },\n    setUserCount() {\n      let record = this.userRegCount;\n      let lastRecord = record[record.length - 1];\n      let date = new Date();\n      let dateFormat = \"YYYY-MM-DD\";\n      let formatDate = moment(date).format(dateFormat);\n      let num = 0;\n      if (lastRecord && lastRecord.date === formatDate) {\n        num = lastRecord.count;\n      }\n      this.dayUserCount = num;\n      let count = 0;\n    },\n    refreshUserChart() {\n      let users = this.userRegCount;\n      let xValues = [];\n      let yValues = [];\n      for (let i = 0; i < users.length; i++) {\n        xValues.push(users[i].date);\n        yValues.push(users[i].count);\n      }\n      this.userChartConfig.xAxis.data = xValues;\n      this.userChartConfig.series[0].data = yValues;\n      this.userChart.setOption(this.userChartConfig);\n    },\n    userRangeChange() {\n      this.userDayRange = Number(this.userDayRange) || 10;\n      this.getUserCount();\n    }\n  },\n  mounted() {\n    this.rcChart = this.$echarts.init(this.$refs.rcChart);\n    this.uvChart = this.$echarts.init(this.$refs.uvChart);\n    this.articleChart = this.$echarts.init(this.$refs.articleChart);\n    this.userChart = this.$echarts.init(this.$refs.userChart);\n    this.articleSector = this.$echarts.init(this.$refs.articleCountChart);\n    this.getViews();\n    this.getArticleCount();\n    this.getUserCount();\n    this.getArticleRecordCount();\n  }\n};","map":{"version":3,"names":["getViews","getPublishCountByDay","getRecordCount","getRegCountByDay","getUserCount","descArray","doPercent","getCount","moment","name","data","rc","rcYearOption","rcYearValue","monthRcCount","rcTrendInfo","rcMonthOption","rcMonthValue","uv","uvYearOption","uvYearValue","monthUvCount","uvTrendInfo","uvMonthOption","uvMonthValue","articlePublishCount","articleInactiveCount","articleActiveCount","dayArticleCount","articleTrendInfo","userRegCount","dayUserCount","userTrendInfo","articleDayRange","userDayRange","rcChart","rcChartConfig","tooltip","grid","left","right","bottom","containLabel","xAxis","type","yAxis","series","valueFormatter","value","dataZoom","start","end","height","showDataShadow","showDetail","show","uvChart","uvChartConfig","color","articleChart","articleChartConfig","articleSector","articleSectorConfig","trigger","legend","top","radius","center","roseType","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","position","emphasis","fontSize","fontWeight","labelLine","userChart","userChartConfig","methods","then","res","setMonthRcCount","setRcYearOption","setRcMonthOption","refreshRcChart","setMonthUvCount","setUvYearOption","setUvMonthOption","refreshUvChart","year","Object","keys","handlerRcYearChange","Date","getFullYear","toString","month","getMonth","count","lastMonth","padStart","thisMonth","console","log","forEach","map","values","percent","days","xValues","yValues","i","length","push","setOption","record","date","today","getDate","yesterday","thisMonthData","Map","set","get","handlerUvYearChange","getArticleRecordCount","all","active","refreshArticleCountChart","getArticleCount","records","setDayArticleCount","refreshArticleChart","dateFormat","forMatDate","format","lastRecord","secondLastRecord","subtract","artRangeChange","Number","articles","setUserCount","refreshUserChart","formatDate","num","users","userRangeChange","mounted","$echarts","init","$refs","articleCountChart"],"sources":["src/admin/views/DashBoard.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-main style=\"width: 100%;height:100vh;\">\r\n      <el-row style=\"display: flex\">\r\n        <el-card class=\"count-trend\">\r\n          <el-row style=\"height: 50px\">\r\n            <el-col :span=\"12\" class=\"count-trend-left\">\r\n              <el-image :src=\"require('../../static/images/request_count.svg')\" style=\"width: 40px;\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"12\" class=\"count-trend-right\">\r\n              <span>请求量</span><br>\r\n              <span>{{ monthRcCount }}</span>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row v-if=\"rcTrendInfo.length>0\" style=\"font-size: 12px\">\r\n            <i class=\"el-icon-s-operation\" style=\"color: #fccc5c\"/>\r\n            <span>{{ rcTrendInfo }}</span>\r\n          </el-row>\r\n        </el-card>\r\n        <el-card class=\"count-trend\">\r\n          <el-row style=\"height: 50px\">\r\n            <el-col :span=\"10\" class=\"count-trend-left\">\r\n              <el-image :src=\"require('../../static/images/request.svg')\" style=\"width: 40px;\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"14\" class=\"count-trend-right\">\r\n              <span>唯一用户访问</span><br>\r\n              <span>{{ monthUvCount }}</span>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row v-if=\"rcTrendInfo.length>0\" style=\"font-size: 12px\">\r\n            <i class=\"el-icon-s-platform\" style=\"color: coral\"/>\r\n            <span>{{ uvTrendInfo }}</span>\r\n          </el-row>\r\n        </el-card>\r\n\r\n        <el-card class=\"count-trend\">\r\n          <el-row style=\"height: 50px\">\r\n            <el-col :span=\"12\" class=\"count-trend-left\">\r\n              <el-image :src=\"require('../../static/images/article.svg')\" style=\"width: 40px;\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"12\" class=\"count-trend-right\">\r\n              <span>新增文章</span><br>\r\n              <span>{{ dayArticleCount }}</span>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row v-if=\"articleTrendInfo.length>0\" style=\"font-size: 12px\">\r\n            <i class=\"el-icon-edit-outline\" style=\"color: #14ac64\"/>\r\n            <span>{{ articleTrendInfo }}</span>\r\n          </el-row>\r\n        </el-card>\r\n        <el-card class=\"count-trend\">\r\n          <el-row style=\"height: 50px\">\r\n            <el-col :span=\"12\" class=\"count-trend-left\">\r\n              <el-image :src=\"require('../../static/images/userCount.svg')\" style=\"width: 40px;\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"12\" class=\"count-trend-right\">\r\n              <span>新增用户</span><br>\r\n              <span>{{ dayUserCount }}</span>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row v-if=\"userTrendInfo.length>0\" style=\"font-size: 12px\">\r\n            <i class=\"el-icon-s-promotion\" style=\"color: #209ffc\"/>\r\n            <span>{{ userTrendInfo }}</span>\r\n          </el-row>\r\n        </el-card>\r\n\r\n      </el-row>\r\n      <el-row style=\"margin-top: 20px;display: flex\">\r\n        <el-card style=\"width: 74%\">\r\n          <div id=\"articleRange\" class=\"view-box\">\r\n            <el-row>\r\n              <el-col :span=\"12\" class=\"view-bar-left\">\r\n                <span class=\"view-title\">文章发布统计</span>\r\n              </el-col>\r\n              <el-col :span=\"12\" class=\"view-bar-right\">\r\n                <span class=\"view-title\">最近</span>\r\n                <el-input v-model=\"articleDayRange\" size=\"mini\" style=\"width: 20%;\r\nmargin-left: 6px;margin-right: 6px;\r\n\" @change=\"artRangeChange\"/>\r\n                <span class=\"view-title\">天</span>\r\n              </el-col>\r\n            </el-row>\r\n            <div ref=\"articleChart\" class=\"chart\" style=\"width: 100%;height: 80%\"></div>\r\n          </div>\r\n\r\n        </el-card>\r\n\r\n\r\n        <el-card style=\"width: 24%;margin-left: 2%\">\r\n          <div class=\"view-box\">\r\n            <div ref=\"articleCountChart\" class=\"chart\"></div>\r\n\r\n          </div>\r\n\r\n        </el-card>\r\n\r\n      </el-row>\r\n      <el-row style=\"margin-top: 30px;display: flex;\">\r\n        <el-card class=\"view-count\">\r\n          <div id=\"rc\" class=\"view-box\">\r\n            <el-row>\r\n              <el-col :span=\"12\" class=\"view-bar-left\">\r\n                <span class=\"view-title\">Rc</span>\r\n              </el-col>\r\n              <el-col :span=\"12\" class=\"view-bar-right\">\r\n                <el-select v-model=\"rcMonthValue\" class=\"view-select\" size=\"mini\" @change=\"refreshRcChart\">\r\n                  <el-option\r\n                      v-for=\"item in rcMonthOption\"\r\n                      :key=\"item\"\r\n                      :label=\"item\"\r\n                      :value=\"item\">\r\n                  </el-option>\r\n                </el-select>\r\n                <el-select v-model=\"rcYearValue\" class=\"view-select\" size=\"mini\" @change=\"handlerRcYearChange\">\r\n                  <el-option\r\n                      v-for=\"item in rcYearOption\"\r\n                      :key=\"item\"\r\n                      :label=\"item\"\r\n                      :value=\"item\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-col>\r\n            </el-row>\r\n            <div ref=\"rcChart\" class=\"chart\" style=\"width: 100%;height: 80%\"></div>\r\n          </div>\r\n        </el-card>\r\n        <el-card class=\"view-count\">\r\n          <div id=\"uv\" class=\"view-box\">\r\n            <el-row>\r\n              <el-col :span=\"12\" class=\"view-bar-left\">\r\n                <span class=\"view-title\">Uv</span>\r\n              </el-col>\r\n              <el-col :span=\"12\" class=\"view-bar-right\">\r\n                <el-select v-model=\"uvMonthValue\" class=\"view-select\" size=\"mini\" @change=\"refreshUvChart\">\r\n                  <el-option\r\n                      v-for=\"item in uvMonthOption\"\r\n                      :key=\"item\"\r\n                      :label=\"item\"\r\n                      :value=\"item\">\r\n                  </el-option>\r\n                </el-select>\r\n                <el-select v-model=\"uvYearValue\" class=\"view-select\" size=\"mini\" @change=\"handlerUvYearChange\">\r\n                  <el-option\r\n                      v-for=\"item in uvYearOption\"\r\n                      :key=\"item\"\r\n                      :label=\"item\"\r\n                      :value=\"item\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-col>\r\n            </el-row>\r\n            <div ref=\"uvChart\" class=\"chart\" style=\"width: 100%;height: 80%\"></div>\r\n          </div>\r\n\r\n        </el-card>\r\n        <el-card class=\"view-count\">\r\n          <div id=\"userRange\" class=\"view-box\">\r\n            <el-row>\r\n              <el-col :span=\"12\" class=\"view-bar-left\">\r\n                <span class=\"view-title\">用户注册统计</span>\r\n              </el-col>\r\n              <el-col :span=\"12\" class=\"view-bar-right\">\r\n                <span class=\"view-title\">最近</span>\r\n                <el-input v-model=\"userDayRange\" size=\"mini\" style=\"width: 30%;\r\nmargin-left: 6px;margin-right: 6px;\r\n\" @change=\"userRangeChange\"/>\r\n                <span class=\"view-title\">天</span>\r\n              </el-col>\r\n            </el-row>\r\n            <div ref=\"userChart\" class=\"chart\" style=\"width: 100%;height: 80%\"></div>\r\n          </div>\r\n        </el-card>\r\n      </el-row>\r\n\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport {getViews} from \"@/admin/api/Common\";\r\nimport {getPublishCountByDay, getRecordCount} from \"@/admin/api/Article\";\r\nimport {getRegCountByDay, getUserCount} from \"@/admin/api/User\";\r\nimport {descArray, doPercent, getCount} from \"@/util/tools\";\r\nimport * as moment from 'moment'\r\n\r\nexport default {\r\n  name: \"DashBoard\",\r\n  data() {\r\n    return {\r\n      rc: {},\r\n      rcYearOption: [],\r\n      rcYearValue: '',\r\n      monthRcCount: 0,\r\n      rcTrendInfo: '',\r\n      rcMonthOption: [],\r\n      rcMonthValue: '',\r\n      uv: {},\r\n      uvYearOption: [],\r\n      uvYearValue: '',\r\n      monthUvCount: 0,\r\n      uvTrendInfo: '',\r\n      uvMonthOption: [],\r\n      uvMonthValue: '',\r\n      articlePublishCount: [],\r\n      articleInactiveCount: 0,\r\n      articleActiveCount: 0,\r\n      dayArticleCount: 0,\r\n      articleTrendInfo: '',\r\n      userRegCount: [],\r\n      dayUserCount: 0,\r\n      userTrendInfo: '',\r\n      //最近x天\r\n      articleDayRange: 10,\r\n\r\n      userDayRange: 10,\r\n\r\n      rcChart: null,\r\n      rcChartConfig: {\r\n        tooltip: {},\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: '10%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: \"当日rc\",\r\n            type: \"line\",\r\n            tooltip: {\r\n              valueFormatter: function (value) {\r\n                return getCount(value)\r\n              }\r\n            },\r\n            data: []\r\n          }\r\n        ],\r\n        dataZoom: {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100,\r\n          height: 10,\r\n          bottom: 4,\r\n          showDataShadow: true,\r\n          showDetail: false,\r\n          show: false\r\n        }\r\n      },\r\n      uvChart: null,\r\n      uvChartConfig: {\r\n        color: '#96ce7a',\r\n        tooltip: {},\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: '10%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: \"当日uv\",\r\n            type: \"line\",\r\n            data: []\r\n          }\r\n        ],\r\n        dataZoom: {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100,\r\n          height: 14,\r\n          bottom: 4,\r\n          showDataShadow: true,\r\n          showDetail: false,\r\n          show: false\r\n        }\r\n      },\r\n      articleChart: null,\r\n      articleChartConfig: {\r\n        color: '#fccc60',\r\n        tooltip: {},\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: '2%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: \"当日文章发布\",\r\n            type: \"line\",\r\n            data: []\r\n          }\r\n        ],\r\n        dataZoom: {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100,\r\n          height: 14,\r\n          showDataShadow: true,\r\n          showDetail: false,\r\n          show: false\r\n        }\r\n      },\r\n      articleSector: null,\r\n      articleSectorConfig: {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          top: 0,\r\n          left: 'center'\r\n        },\r\n        grid: {\r\n          top: '30%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: '文章统计',\r\n            type: 'pie',\r\n            radius: ['30%', '70%'],\r\n            center: ['50%', '50%'],\r\n            roseType: 'area',\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      userChart: null,\r\n      userChartConfig: {\r\n        color: '#ec6464',\r\n        tooltip: {},\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: 2,\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: \"当日用户注册\",\r\n            type: \"bar\",\r\n            data: []\r\n          }\r\n        ],\r\n        dataZoom: {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100,\r\n          height: 14,\r\n          showDataShadow: true,\r\n          showDetail: false,\r\n          show: false\r\n        }\r\n      },\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    getViews() {\r\n      getViews().then((res => {\r\n        this.rc = res.data.rc;\r\n        this.uv = res.data.uv;\r\n        this.setMonthRcCount();\r\n        this.setRcYearOption();\r\n        this.setRcMonthOption();\r\n        this.refreshRcChart();\r\n        this.setMonthUvCount();\r\n        this.setUvYearOption();\r\n        this.setUvMonthOption();\r\n        this.refreshUvChart();\r\n      }))\r\n    }\r\n    ,\r\n    setRcYearOption() {\r\n      let year = Object.keys(this.rc)\r\n      year = descArray(year)\r\n      this.rcYearValue = year[0]\r\n      this.rcYearOption = year;\r\n    },\r\n    handlerRcYearChange() {\r\n      this.setRcMonthOption();\r\n      this.refreshRcChart();\r\n    },\r\n    setMonthRcCount() {\r\n      let year = new Date().getFullYear().toString();\r\n      let month = new Date().getMonth() + 1;\r\n      let count = [0, 0];\r\n      let lastMonth = this.rc[year][(month - 1).toString().padStart(2, '0')];\r\n      let thisMonth = this.rc[year][month.toString().padStart(2, '0')];\r\n      console.log(lastMonth)\r\n      console.log(thisMonth)\r\n      lastMonth.forEach(map => {\r\n        count[0] += Object.values(map)[0]\r\n      })\r\n      thisMonth.forEach(map => {\r\n        count[1] += Object.values(map)[0];\r\n      })\r\n      this.monthRcCount = count[1];\r\n      let percent = doPercent(count[1], count[0])\r\n      console.log(percent)\r\n      if (percent > 100) {\r\n        this.rcTrendInfo = \"较上月提升\" + percent + \"%\";\r\n      } else if (percent === 100) {\r\n        this.rcTrendInfo = \"较上月提升0%\";\r\n      } else {\r\n        this.rcTrendInfo = \"较上月下降\" + percent + \"%\";\r\n      }\r\n    }\r\n    ,\r\n    setRcMonthOption() {\r\n      let year = this.rcYearValue;\r\n      let month = Object.keys(this.rc[year]);\r\n      month = descArray(month)\r\n      this.rcMonthValue = month[0]\r\n      this.rcMonthOption = month;\r\n    },\r\n    refreshRcChart() {\r\n      let rc = this.rc;\r\n      let days = rc[this.rcYearValue][this.rcMonthValue];\r\n      let xValues = []\r\n      let yValues = []\r\n      for (let i = days.length - 1; i >= 0; i--) {\r\n        xValues.push(Object.keys(days[i])[0] + '号')\r\n        yValues.push(Object.values(days[i])[0])\r\n      }\r\n      if (xValues.length > 10) {\r\n        this.rcChartConfig.dataZoom.show = true\r\n      }\r\n      this.rcChartConfig.xAxis.data = xValues\r\n      this.rcChartConfig.series[0].data = yValues\r\n      this.rcChart.setOption(this.rcChartConfig)\r\n    },\r\n    setUvYearOption() {\r\n      let year = Object.keys(this.uv)\r\n      year = descArray(year)\r\n      this.uvYearValue = year[0]\r\n      this.uvYearOption = year;\r\n\r\n    },\r\n    setMonthUvCount() {\r\n      let record = this.uv;\r\n      console.log(record)\r\n      let date = new Date();\r\n      let year = date.getFullYear().toString();\r\n      let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n      let today = date.getDate().toString().padStart(2, \"0\");\r\n      let yesterday = (date.getDate() - 1).toString().padStart(2, \"0\");\r\n      let thisMonthData = new Map();\r\n      record[year][month].forEach(map => {\r\n        thisMonthData.set(Object.keys(map)[0], Object.values(map)[0])\r\n      })\r\n      this.monthUvCount = thisMonthData.get(today);\r\n      let percent = doPercent(this.monthUvCount, thisMonthData.get(yesterday));\r\n      if (percent > 100) {\r\n        this.uvTrendInfo = \"较昨日增加\" + percent + \"%\";\r\n      } else if (percent === 10) {\r\n        this.uvTrendInfo = \"较昨日增加0%\";\r\n      } else {\r\n        this.uvTrendInfo = \"较昨日减少\" + percent + \"%\";\r\n\r\n      }\r\n    },\r\n    handlerUvYearChange() {\r\n      this.setUvMonthOption();\r\n      this.refreshUvChart();\r\n    },\r\n    setUvMonthOption() {\r\n      let year = this.uvYearValue;\r\n      let month = Object.keys(this.uv[year]);\r\n      month = descArray(month)\r\n      this.uvMonthValue = month[0]\r\n      this.uvMonthOption = month;\r\n    },\r\n    refreshUvChart() {\r\n      let uv = this.uv;\r\n      let days = uv[this.uvYearValue][this.uvMonthValue];\r\n      let xValues = []\r\n      let yValues = []\r\n      for (let i = days.length - 1; i >= 0; i--) {\r\n        xValues.push(Object.keys(days[i])[0] + '号')\r\n        yValues.push(Object.values(days[i])[0])\r\n      }\r\n      if (xValues.length > 10) {\r\n        this.uvChartConfig.dataZoom.show = true\r\n      }\r\n      this.uvChartConfig.xAxis.data = xValues\r\n      this.uvChartConfig.series[0].data = yValues\r\n      this.uvChart.setOption(this.uvChartConfig)\r\n    },\r\n    getArticleRecordCount() {\r\n      getRecordCount().then((res) => {\r\n        let data = res.data;\r\n        let all = data.all;\r\n        let active = data.active;\r\n        this.articleActiveCount = active;\r\n        this.articleInactiveCount = all - active;\r\n        this.refreshArticleCountChart();\r\n      })\r\n    },\r\n    refreshArticleCountChart() {\r\n      let data = [{\r\n        value: this.articleActiveCount, name: '有效',\r\n        itemStyle: {color: '#98cc74'}\r\n      },\r\n        {\r\n          value: this.articleInactiveCount, name: '冻结',\r\n          itemStyle: {color: '#ec6464'}\r\n        }];\r\n      this.articleSectorConfig.series[0].data = data;\r\n      this.articleSector.setOption(this.articleSectorConfig)\r\n    },\r\n    getArticleCount() {\r\n      getPublishCountByDay(this.articleDayRange).then((res) => {\r\n        this.articlePublishCount = res.data.records;\r\n        this.setDayArticleCount();\r\n        this.refreshArticleChart()\r\n      })\r\n    },\r\n    setDayArticleCount() {\r\n      let date = new Date();\r\n      let dateFormat = \"YYYY-MM-DD\";\r\n      let forMatDate = moment(date).format(dateFormat)\r\n      let lastRecord = this.articlePublishCount[this.articlePublishCount.length - 1]\r\n      let secondLastRecord = this.articlePublishCount[this.articlePublishCount.length - 2]\r\n      let count = [0, 0];\r\n      if (lastRecord && lastRecord.date === forMatDate) {\r\n        count[0] = lastRecord.count;\r\n      }\r\n      date = moment(date).subtract(1, \"days\");\r\n      forMatDate = moment(date).format(dateFormat)\r\n      if (secondLastRecord && secondLastRecord.date === forMatDate) {\r\n        count[1] = secondLastRecord.count;\r\n      }\r\n      console.log(lastRecord, secondLastRecord, count)\r\n      this.dayArticleCount = count[0];\r\n      let percent = doPercent(count[0], count[1])\r\n      if (percent > 100) {\r\n        this.articleTrendInfo = \"较昨天增加\" + percent + \"%\";\r\n      } else if (percent === 100) {\r\n        this.articleTrendInfo = \"较昨天增加0%\";\r\n\r\n      } else {\r\n        this.articleTrendInfo = \"较昨天减少\" + percent + \"%\";\r\n      }\r\n    },\r\n    artRangeChange() {\r\n      this.articleDayRange = Number(this.articleDayRange) || 10\r\n      this.getArticleCount()\r\n    },\r\n    refreshArticleChart() {\r\n      let articles = this.articlePublishCount;\r\n      let xValues = [];\r\n      let yValues = [];\r\n      for (let i = 0; i < articles.length; i++) {\r\n        xValues.push(articles[i].date)\r\n        yValues.push(articles[i].count)\r\n      }\r\n      this.articleChartConfig.xAxis.data = xValues;\r\n      this.articleChartConfig.series[0].data = yValues;\r\n      this.articleChart.setOption(this.articleChartConfig);\r\n    },\r\n    getUserCount() {\r\n      getRegCountByDay(this.userDayRange).then((res) => {\r\n        this.userRegCount = res.data.records;\r\n        this.setUserCount();\r\n        this.refreshUserChart();\r\n      })\r\n      getUserCount().then((res) => {\r\n        let count = res.data.all;\r\n        this.userTrendInfo = \"共有用户\" + count + \"位\"\r\n      })\r\n    },\r\n    setUserCount() {\r\n      let record = this.userRegCount;\r\n      let lastRecord = record[record.length - 1];\r\n      let date = new Date();\r\n      let dateFormat = \"YYYY-MM-DD\";\r\n      let formatDate = moment(date).format(dateFormat);\r\n      let num = 0;\r\n      if (lastRecord && lastRecord.date === formatDate) {\r\n        num = lastRecord.count;\r\n      }\r\n      this.dayUserCount = num;\r\n      let count = 0;\r\n\r\n    },\r\n    refreshUserChart() {\r\n      let users = this.userRegCount;\r\n      let xValues = [];\r\n      let yValues = [];\r\n      for (let i = 0; i < users.length; i++) {\r\n        xValues.push(users[i].date)\r\n        yValues.push(users[i].count)\r\n      }\r\n      this.userChartConfig.xAxis.data = xValues;\r\n      this.userChartConfig.series[0].data = yValues;\r\n      this.userChart.setOption(this.userChartConfig);\r\n    },\r\n    userRangeChange() {\r\n      this.userDayRange = Number(this.userDayRange) || 10\r\n      this.getUserCount();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.rcChart = this.$echarts.init(this.$refs.rcChart);\r\n    this.uvChart = this.$echarts.init(this.$refs.uvChart);\r\n    this.articleChart = this.$echarts.init(this.$refs.articleChart);\r\n    this.userChart = this.$echarts.init(this.$refs.userChart);\r\n    this.articleSector = this.$echarts.init(this.$refs.articleCountChart)\r\n    this.getViews();\r\n    this.getArticleCount();\r\n    this.getUserCount();\r\n    this.getArticleRecordCount();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nel-col {\r\n  text-align: center;\r\n}\r\n\r\n.view-count {\r\n  width: 32%;\r\n  float: left;\r\n  height: 320px;\r\n}\r\n\r\n.view-count + .view-count {\r\n  margin-left: 2%;\r\n}\r\n\r\n.view-box {\r\n  width: 100%;\r\n  height: 320px;\r\n  text-align: center;\r\n}\r\n\r\n.chart {\r\n  width: 90%;\r\n  height: 90%;\r\n}\r\n\r\n.view-select {\r\n  width: 40%;\r\n  float: right;\r\n}\r\n\r\n.view-title {\r\n  color: #70747c;\r\n  font-size: 16px;\r\n}\r\n\r\n.view-bar-right {\r\n  text-align: right;\r\n}\r\n\r\n.view-bar-left {\r\n  text-align: left;\r\n}\r\n\r\nel-slider {\r\n  width: 50%;\r\n  float: right;\r\n}\r\n\r\n.el-popper[x-placement^=bottom] .popper__arrow::after {\r\n\r\n  border-bottom-color: #03204e !important;\r\n\r\n}\r\n\r\n.count-trend {\r\n  width: 22%;\r\n}\r\n\r\n.count-trend + .count-trend {\r\n  margin-left: 4%;\r\n}\r\n\r\n.count-trend-left {\r\n  text-align: left;\r\n}\r\n\r\n.count-trend-right {\r\n  text-align: right;\r\n}\r\n\r\n.el-main::-webkit-scrollbar {\r\n  width: 0 !important\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA,SAAAA,QAAA;AACA,SAAAC,oBAAA,EAAAC,cAAA;AACA,SAAAC,gBAAA,EAAAC,YAAA;AACA,SAAAC,SAAA,EAAAC,SAAA,EAAAC,QAAA;AACA,YAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,YAAA;MACAC,WAAA;MACAC,YAAA;MACAC,WAAA;MACAC,aAAA;MACAC,YAAA;MACAC,EAAA;MACAC,YAAA;MACAC,WAAA;MACAC,YAAA;MACAC,WAAA;MACAC,aAAA;MACAC,YAAA;MACAC,mBAAA;MACAC,oBAAA;MACAC,kBAAA;MACAC,eAAA;MACAC,gBAAA;MACAC,YAAA;MACAC,YAAA;MACAC,aAAA;MACA;MACAC,eAAA;MAEAC,YAAA;MAEAC,OAAA;MACAC,aAAA;QACAC,OAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAlC,IAAA;QACA;QACAmC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACArC,IAAA;UACAmC,IAAA;UACAP,OAAA;YACAU,cAAA,WAAAA,CAAAC,KAAA;cACA,OAAAzC,QAAA,CAAAyC,KAAA;YACA;UACA;UACAtC,IAAA;QACA,EACA;QACAuC,QAAA;UACAL,IAAA;UACAM,KAAA;UACAC,GAAA;UACAC,MAAA;UACAX,MAAA;UACAY,cAAA;UACAC,UAAA;UACAC,IAAA;QACA;MACA;MACAC,OAAA;MACAC,aAAA;QACAC,KAAA;QACArB,OAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAlC,IAAA;QACA;QACAmC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACArC,IAAA;UACAmC,IAAA;UACAlC,IAAA;QACA,EACA;QACAuC,QAAA;UACAL,IAAA;UACAM,KAAA;UACAC,GAAA;UACAC,MAAA;UACAX,MAAA;UACAY,cAAA;UACAC,UAAA;UACAC,IAAA;QACA;MACA;MACAI,YAAA;MACAC,kBAAA;QACAF,KAAA;QACArB,OAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAlC,IAAA;QACA;QACAmC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACArC,IAAA;UACAmC,IAAA;UACAlC,IAAA;QACA,EACA;QACAuC,QAAA;UACAL,IAAA;UACAM,KAAA;UACAC,GAAA;UACAC,MAAA;UACAC,cAAA;UACAC,UAAA;UACAC,IAAA;QACA;MACA;MACAM,aAAA;MACAC,mBAAA;QACAzB,OAAA;UACA0B,OAAA;QACA;QACAC,MAAA;UACAC,GAAA;UACA1B,IAAA;QACA;QACAD,IAAA;UACA2B,GAAA;UACA1B,IAAA;QACA;QACAO,MAAA,GACA;UACArC,IAAA;UACAmC,IAAA;UACAsB,MAAA;UACAC,MAAA;UACAC,QAAA;UACAC,iBAAA;UACAC,SAAA;YACAC,YAAA;YACAC,WAAA;YACAC,WAAA;UACA;UACAC,KAAA;YACAnB,IAAA;YACAoB,QAAA;UACA;UACAC,QAAA;YACAF,KAAA;cACAnB,IAAA;cACAsB,QAAA;cACAC,UAAA;YACA;UACA;UACAC,SAAA;YACAxB,IAAA;UACA;UACA7C,IAAA;QACA;MAEA;MACAsE,SAAA;MACAC,eAAA;QACAvB,KAAA;QACArB,OAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAlC,IAAA;QACA;QACAmC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACArC,IAAA;UACAmC,IAAA;UACAlC,IAAA;QACA,EACA;QACAuC,QAAA;UACAL,IAAA;UACAM,KAAA;UACAC,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}