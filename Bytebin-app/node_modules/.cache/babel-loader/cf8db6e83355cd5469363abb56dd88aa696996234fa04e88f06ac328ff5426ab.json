{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navigation from \"@/components/Navigation.vue\";\nimport { deleteSort, getDetail, updateSort } from \"@/api/Sort\";\nimport ArticleList from \"@/components/ArticleList.vue\";\nexport default {\n  name: \"SortDetail\",\n  components: {\n    'navigation': Navigation,\n    'article-list': ArticleList\n  },\n  data() {\n    return {\n      id: '',\n      sort: {},\n      articles: [],\n      userId: '',\n      dialogVisible: false,\n      choose: {},\n      cover: [],\n      addDialog: false,\n      sortForAdd: {}\n    };\n  },\n  methods: {\n    getDetail() {\n      getDetail(this.id).then(res => {\n        this.sort = res.data.sort;\n        this.articles = res.data.articles;\n      });\n    },\n    deleteSort(index) {\n      deleteSort(this.sorts[index].id).then(res => {\n        if (res.code === 2001) {\n          this.$router.push(\"/index\");\n        } else {\n          this.$notify({\n            title: \"ByteBin\",\n            message: res.message,\n            type: \"error\",\n            duration: 1000\n          });\n        }\n      });\n    },\n    updateSort() {\n      updateSort(this.choose.id, this.choose.title, this.cover[0].raw).then(res => {\n        if (res.code === 2001) {\n          this.dialogVisible = false;\n          this.choose = {};\n          this.cover = [];\n          this.getDetail();\n        } else {\n          this.$notify({\n            title: \"ByteBin\",\n            message: res.message,\n            type: \"error\",\n            duration: 1000\n          });\n        }\n      });\n    },\n    handleChange(file, fileList) {\n      this.cover[0] = file;\n      this.cover[0].url = URL.createObjectURL(file.raw);\n      this.$forceUpdate();\n    }\n  },\n  created() {\n    this.id = this.$route.query.id;\n    this.userId = this.$cookie.get(\"id\");\n    this.getDetail();\n  }\n};","map":{"version":3,"names":["Navigation","deleteSort","getDetail","updateSort","ArticleList","name","components","data","id","sort","articles","userId","dialogVisible","choose","cover","addDialog","sortForAdd","methods","then","res","index","sorts","code","$router","push","$notify","title","message","type","duration","raw","handleChange","file","fileList","url","URL","createObjectURL","$forceUpdate","created","$route","query","$cookie","get"],"sources":["src/views/SortDetail.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-main>\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <el-row style=\"align-items: flex-end;\">\r\n            <el-col :span=\"5\">\r\n              <el-image :src=\"sort.cover\" fit=\"cover\"\r\n                        style=\"width: 150px;height: 150px; border: none; box-shadow: none;\"/>\r\n            </el-col>\r\n            <el-col :span=\"10\" style=\"text-align: left;margin-top: 50px\">\r\n              <el-row><h1>{{ sort.title }}</h1></el-row>\r\n              <el-row style=\"font-weight: lighter;color: #8c939d\">\r\n                <span>创建于&nbsp;</span>{{ new Date(sort.createTime).toLocaleDateString() }}\r\n              </el-row>\r\n            </el-col>\r\n            <el-col v-if=\"userId==sort.owner\" :span=\"8\" style=\"margin-top: 124px;text-align: right\">\r\n              <el-link @click.native=\"()=>{dialogVisible=true;choose=sort;cover[0]={};cover[0].url=sort.cover}\">\r\n                <i class=\"el-icon-edit-outline\"/>\r\n                编辑\r\n              </el-link>\r\n              <el-link style=\"margin-left: 20px\" @click.native=\"deleteSort(index)\">\r\n                <i class=\"el-icon-delete-solid\"/>\r\n                删除\r\n              </el-link>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <article-list :articles=\"articles\"/>\r\n        </div>\r\n      </el-card>\r\n    </el-main>\r\n    <el-dialog\r\n        :visible.sync=\"dialogVisible\"\r\n        title=\"编辑\"\r\n        width=\"40%\"\r\n    >\r\n      <div>\r\n        <el-container>\r\n          <el-main>\r\n            <el-row style=\"text-align:center;margin-bottom: 100px\">\r\n              <el-upload\r\n                  :auto-upload=\"false\"\r\n                  :file-list=\"cover\"\r\n                  :on-change=\"handleChange\"\r\n                  :show-file-list=\"false\"\r\n                  action=\"#\"\r\n                  class=\"avatar-uploader\" name=\"avatar\">\r\n                <el-image\r\n                    v-if=\"cover.length>0\"\r\n                    :src=\"cover[0].url\"\r\n                    style=\"width: 200px;height: 150px\"\r\n                ></el-image>\r\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n              </el-upload>\r\n            </el-row>\r\n\r\n            <el-row>\r\n              <el-input v-model=\"choose.title\" maxlength=\"15\"></el-input>\r\n\r\n            </el-row>\r\n          </el-main>\r\n        </el-container>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"updateSort\">确 定</el-button>\r\n  </span>\r\n    </el-dialog>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport Navigation from \"@/components/Navigation.vue\";\r\nimport {deleteSort, getDetail, updateSort} from \"@/api/Sort\";\r\nimport ArticleList from \"@/components/ArticleList.vue\";\r\n\r\nexport default {\r\n  name: \"SortDetail\",\r\n  components: {\r\n    'navigation': Navigation,\r\n    'article-list': ArticleList\r\n  },\r\n  data() {\r\n    return {\r\n      id: '',\r\n      sort: {},\r\n      articles: [],\r\n      userId: '',\r\n      dialogVisible: false,\r\n      choose: {},\r\n      cover: [],\r\n      addDialog: false,\r\n      sortForAdd: {}\r\n    }\r\n  },\r\n  methods: {\r\n    getDetail() {\r\n      getDetail(this.id).then((res) => {\r\n        this.sort = res.data.sort;\r\n        this.articles = res.data.articles\r\n      })\r\n    },\r\n    deleteSort(index) {\r\n      deleteSort(this.sorts[index].id).then((res) => {\r\n        if (res.code === 2001) {\r\n          this.$router.push(\"/index\")\r\n        } else {\r\n          this.$notify({\r\n            title: \"ByteBin\",\r\n            message: res.message,\r\n            type: \"error\",\r\n            duration: 1000\r\n          })\r\n        }\r\n      })\r\n    },\r\n    updateSort() {\r\n      updateSort(this.choose.id, this.choose.title, this.cover[0].raw).then((res) => {\r\n        if (res.code === 2001) {\r\n          this.dialogVisible = false;\r\n          this.choose = {}\r\n          this.cover = []\r\n          this.getDetail()\r\n        } else {\r\n          this.$notify({\r\n            title: \"ByteBin\",\r\n            message: res.message,\r\n            type: \"error\",\r\n            duration: 1000\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleChange(file, fileList) {\r\n      this.cover[0] = file\r\n      this.cover[0].url = URL.createObjectURL(file.raw)\r\n      this.$forceUpdate()\r\n    },\r\n  },\r\n  created() {\r\n    this.id = this.$route.query.id;\r\n    this.userId = this.$cookie.get(\"id\");\r\n    this.getDetail()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 1%;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAAA,UAAA;AACA,SAAAC,UAAA,EAAAC,SAAA,EAAAC,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACA,cAAAN,UAAA;IACA,gBAAAI;EACA;EACAG,KAAA;IACA;MACAC,EAAA;MACAC,IAAA;MACAC,QAAA;MACAC,MAAA;MACAC,aAAA;MACAC,MAAA;MACAC,KAAA;MACAC,SAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAf,UAAA;MACAA,SAAA,MAAAM,EAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,KAAAV,IAAA,GAAAU,GAAA,CAAAZ,IAAA,CAAAE,IAAA;QACA,KAAAC,QAAA,GAAAS,GAAA,CAAAZ,IAAA,CAAAG,QAAA;MACA;IACA;IACAT,WAAAmB,KAAA;MACAnB,UAAA,MAAAoB,KAAA,CAAAD,KAAA,EAAAZ,EAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAG,IAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAC,OAAA;YACAC,KAAA;YACAC,OAAA,EAAAR,GAAA,CAAAQ,OAAA;YACAC,IAAA;YACAC,QAAA;UACA;QACA;MACA;IACA;IACA1B,WAAA;MACAA,UAAA,MAAAU,MAAA,CAAAL,EAAA,OAAAK,MAAA,CAAAa,KAAA,OAAAZ,KAAA,IAAAgB,GAAA,EAAAZ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAG,IAAA;UACA,KAAAV,aAAA;UACA,KAAAC,MAAA;UACA,KAAAC,KAAA;UACA,KAAAZ,SAAA;QACA;UACA,KAAAuB,OAAA;YACAC,KAAA;YACAC,OAAA,EAAAR,GAAA,CAAAQ,OAAA;YACAC,IAAA;YACAC,QAAA;UACA;QACA;MACA;IACA;IACAE,aAAAC,IAAA,EAAAC,QAAA;MACA,KAAAnB,KAAA,MAAAkB,IAAA;MACA,KAAAlB,KAAA,IAAAoB,GAAA,GAAAC,GAAA,CAAAC,eAAA,CAAAJ,IAAA,CAAAF,GAAA;MACA,KAAAO,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA9B,EAAA,QAAA+B,MAAA,CAAAC,KAAA,CAAAhC,EAAA;IACA,KAAAG,MAAA,QAAA8B,OAAA,CAAAC,GAAA;IACA,KAAAxC,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}