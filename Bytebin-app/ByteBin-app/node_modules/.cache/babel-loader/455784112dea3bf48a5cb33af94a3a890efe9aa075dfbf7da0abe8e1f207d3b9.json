{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { register, verify } from \"@/api/User\";\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      userForm: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      dialogVisible: false,\n      code: '',\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          max: 30,\n          message: '不能大于30个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }, {\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }]\n        /* password: [\n           {required: true, message: '请输入密码', trigger: 'blur'},\n           {min: 6, message: '不能小于6个字符', trigger: 'blur'}\n         ]*/\n      }\n    };\n  },\n  methods: {\n    register(formName) {\n      let that = this;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          that.dialogVisible = true;\n          register(that.userForm).then(res => {\n            console.log(res);\n            console.log(res.code);\n            if (res.code == 2001) {\n              that.dialogVisible = true;\n            } else {\n              that.$message({\n                message: res.message,\n                type: 'error',\n                showClose: true\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    verify() {\n      let that = this;\n      that.dialogVisible = false;\n      verify(that.userForm.email, that.code).then(res => {\n        let type = res.code == 2001 ? 'success' : 'error';\n        that.$message({\n          message: res.message,\n          type: type,\n          showClose: true\n        });\n        that.$router.push({\n          path: '/login'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["register","verify","name","data","userForm","username","email","password","dialogVisible","code","rules","required","message","trigger","max","type","methods","formName","that","$refs","validate","valid","then","res","console","log","$message","showClose","$router","push","path"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div id=\"register\">\n    <!--<video preload=\"auto\" class=\"me-video-player\" autoplay=\"autoplay\" loop=\"loop\">\n          <source src=\"../../static/vedio/sea.mp4\" type=\"video/mp4\">\n      </video>-->\n\n    <div class=\"me-login-box me-login-box-radius\">\n      <img src=\"../static/images/logo.svg\" style=\"height: 100px\">\n      <h1>HitBytebin 注册</h1>\n\n      <el-form ref=\"userForm\" :model=\"userForm\" :rules=\"rules\">\n        <el-form-item prop=\"account\">\n          <el-input v-model=\"userForm.username\" placeholder=\"用户名\"></el-input>\n        </el-form-item>\n\n        <el-form-item prop=\"nickname\">\n          <el-input v-model=\"userForm.password\" placeholder=\"密码\"></el-input>\n        </el-form-item>\n\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"userForm.email\" placeholder=\"邮箱\"></el-input>\n        </el-form-item>\n\n        <el-form-item class=\"me-login-button\" size=\"small\">\n          <el-button type=\"primary\" @click.native.prevent=\"register('userForm')\">注册</el-button>\n        </el-form-item>\n        <el-dialog\n            :close-on-click-modal=\"false\"\n            :close-on-press-escape=\"true\"\n            :show-close=\"true\"\n            :visible.sync=\"dialogVisible\"\n            title=\"验证\"\n            width=\"30%\">\n          <span>验证码已发至您的邮箱，请注意查收</span>\n          <el-input v-model=\"code\" placeholder=\"请输入验证码\"></el-input>\n          <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"verify\">确 定</el-button>\n  </span>\n        </el-dialog>\n      </el-form>\n\n      <div class=\"me-login-design\">\n        <p>已有账号？\n          <strong>\n            <router-link class=\"me-login-design-color\" to=\"/login\">去登录</router-link>\n          </strong>\n        </p>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport {register, verify} from \"@/api/User\";\n\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      userForm: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      dialogVisible: false,\n      code: '',\n      rules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {max: 30, message: '不能大于30个字符', trigger: 'blur'}\n        ],\n        email: [\n          {type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur'},\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\n        ],\n        /* password: [\n           {required: true, message: '请输入密码', trigger: 'blur'},\n           {min: 6, message: '不能小于6个字符', trigger: 'blur'}\n         ]*/\n      }\n\n    }\n  },\n  methods: {\n    register(formName) {\n      let that = this\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          that.dialogVisible = true\n          register(that.userForm).then((res) => {\n            console.log(res)\n            console.log(res.code)\n            if (res.code == 2001) {\n              that.dialogVisible = true\n            } else {\n              that.$message({message: res.message, type: 'error', showClose: true})\n            }\n          })\n\n        } else {\n          return false;\n        }\n      });\n    },\n    verify() {\n      let that = this\n      that.dialogVisible = false;\n      verify(that.userForm.email, that.code).then((res) => {\n        let type = res.code == 2001 ? 'success' : 'error'\n        that.$message({message: res.message, type: type, showClose: true});\n        that.$router.push({path: '/login'})\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n#login {\n  min-width: 100%;\n  min-height: 100%;\n}\n\n.me-video-player {\n  background-color: transparent;\n  width: 100%;\n  height: 100%;\n  object-fit: fill;\n  display: block;\n  position: absolute;\n  left: 0;\n  z-index: 0;\n  top: 0;\n}\n\n.me-login-box {\n  position: absolute;\n  width: 300px;\n  height: auto;\n  background-color: white;\n  margin-top: 150px;\n  margin-left: -180px;\n  left: 50%;\n  padding: 30px;\n  text-align: center;\n}\n\n.me-login-box-radius {\n  border-radius: 10px;\n  box-shadow: 0px 0px 1px 1px rgba(161, 159, 159, 0.1);\n}\n\n.me-login-box h1 {\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 20px;\n  vertical-align: middle;\n}\n\n.me-login-design {\n  text-align: center;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 18px;\n}\n\n.me-login-design-color {\n  color: #449cfc !important;\n}\n\n.me-login-button {\n  text-align: center;\n}\n\n.me-login-button button {\n  width: 100%;\n}\n\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,SAAAA,QAAA,EAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,aAAA;MACAC,IAAA;MACAC,KAAA;QACAL,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,KAAA,GACA;UAAAS,IAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QAEA;AACA;AACA;AACA;MACA;IAEA;EACA;EACAG,OAAA;IACAhB,SAAAiB,QAAA;MACA,IAAAC,IAAA;MACA,KAAAC,KAAA,CAAAF,QAAA,EAAAG,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAH,IAAA,CAAAV,aAAA;UACAR,QAAA,CAAAkB,IAAA,CAAAd,QAAA,EAAAkB,IAAA,CAAAC,GAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAd,IAAA;YACA,IAAAc,GAAA,CAAAd,IAAA;cACAS,IAAA,CAAAV,aAAA;YACA;cACAU,IAAA,CAAAQ,QAAA;gBAAAd,OAAA,EAAAW,GAAA,CAAAX,OAAA;gBAAAG,IAAA;gBAAAY,SAAA;cAAA;YACA;UACA;QAEA;UACA;QACA;MACA;IACA;IACA1B,OAAA;MACA,IAAAiB,IAAA;MACAA,IAAA,CAAAV,aAAA;MACAP,MAAA,CAAAiB,IAAA,CAAAd,QAAA,CAAAE,KAAA,EAAAY,IAAA,CAAAT,IAAA,EAAAa,IAAA,CAAAC,GAAA;QACA,IAAAR,IAAA,GAAAQ,GAAA,CAAAd,IAAA;QACAS,IAAA,CAAAQ,QAAA;UAAAd,OAAA,EAAAW,GAAA,CAAAX,OAAA;UAAAG,IAAA,EAAAA,IAAA;UAAAY,SAAA;QAAA;QACAT,IAAA,CAAAU,OAAA,CAAAC,IAAA;UAAAC,IAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}